;(lambda (x) x)
;(lambda (x) (lambda (y) x))
;(java (method (static-field "java.lang.System" "out") "println" "java.lang.Object") (static-field "java.lang.System" "out") "foo")
;(java (method (static-field "java.lang.System" "out") "println" "java.lang.Object") (static-field "java.lang.System" "out") raise)

#;(with-exception-handler
  (lambda (x)
    (java
      (method
        (static-field "java.lang.System" "out")
        "println"
        "java.lang.Object")
      (static-field
        "java.lang.System"
        "out")
      x))
  (lambda () (raise "help")))

(java (method (static-field "java.lang.System" "out") "println" "java.lang.Object") (static-field "java.lang.System" "out")
  ((lambda ()
   (java (method (static-field "java.lang.System" "out") "println" "java.lang.Object") (static-field "java.lang.System" "out") 0)
   1)))

(let-syntax ((foo (syntax-rules ()
				((foo a) (foo 1 a)) )))
	(java (method (static-field "java.lang.System" "out") "println" "java.lang.Object") (static-field "java.lang.System" "out") "foo"))
