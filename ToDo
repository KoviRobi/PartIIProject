g -i 'todo'		`{find . -name '*.java'}
g -i 'fixme'	`{find . -name '*.java'}
g -i 'next'		`{find . -name '*.java'}
g -i 'xxx'		`{find . -name '*.java'}

Immutable data (e.g. quoted data) - nice but not necessary
Improper list lambdas
Definitions (function)
 - Internal definitions
Proper line numbers
Make middle neater by using macro matching
More efficient macro matching (regular expression simple and fast) --- Measure performance to see if we need this
Split trampolines, as they are doing two things at the moment, trampoline and CallValue
Sort out nil vs null discrepancy
Have the bind() call of the reflective environment be something that is called after the environment is initialised, this way when main classes become environments for libraries, we have regularity
eval tail call
Java call order, e.g. CLOS is left to right for specialisation
Display and write don't do newlines

REPL does not bounce trampolines: try running ((lambda (x) (x x)) (lambda (x) (x x)))

current implementation of store is broken, closures should not change store location or environment binding (e.g. for macros)
